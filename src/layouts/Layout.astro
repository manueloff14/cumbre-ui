---
interface Props {
	title: string;
	description: string;
	canonicalUrl: string;
}

const { title, description, canonicalUrl } = Astro.props;
---

<!doctype html>
<html lang="es">
	<head>
		<!-- Google Adsense -->
		<script
			async
			src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4492898550156535"
			crossorigin="anonymous"></script>
		<!-- Google tag (gtag.js) -->
		<script
			async
			src="https://www.googletagmanager.com/gtag/js?id=G-QG3J5H2MZW"
		></script>
		<script>
			window.dataLayer = window.dataLayer || [];
			function gtag() {
				dataLayer.push(arguments);
			}
			gtag("js", new Date());

			gtag("config", "G-QG3J5H2MZW");
		</script>
		<!-- Google Tag Manager -->
		<script>
			(function (w, d, s, l, i) {
				w[l] = w[l] || [];
				w[l].push({
					"gtm.start": new Date().getTime(),
					event: "gtm.js",
				});
				var f = d.getElementsByTagName(s)[0],
					j = d.createElement(s),
					dl = l != "dataLayer" ? "&l=" + l : "";
				j.async = true;
				j.src = "https://www.googletagmanager.com/gtm.js?id=" + i + dl;
				f.parentNode.insertBefore(j, f);
			})(window, document, "script", "dataLayer", "GTM-W2BK8QZS");
		</script>
		<!-- End Google Tag Manager -->
		<meta charset="UTF-8" />
		<meta
			name="description"
			content={description || "Descripción por defecto"}
		/>
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/img/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title} Cumbre</title>
		<style>
			* {
				transition: 0.3s;
			}
		</style>
		<link rel="canonical" href={canonicalUrl || "https://cumbre.icu"} />
		<script src="https://cdn.socket.io/4.0.0/socket.io.min.js"></script>
		<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
	</head>
	<body class="bg-gray-950 text-white lg:flex w-full">
		<!-- Google Tag Manager (noscript) -->
		<noscript
			><iframe
				src="https://www.googletagmanager.com/ns.html?id=GTM-W2BK8QZS"
				height="0"
				width="0"
				style="display:none;visibility:hidden"></iframe></noscript
		>
		<!-- End Google Tag Manager (noscript) -->
		<slot />
		<script>
			// Mapeo de rutas a IDs de botones, nuevas imágenes y estilos adicionales
			const buttonsConfig = {
				"/": {
					id: "btnInicio",
					imgSrc: "/img/homeClick.svg",
					backgroundColor: "transparent", // Cambia a tu color de fondo deseado
					additionalClasses: [
						"font-bold",
						"text-white",
						"border-b",
						"border-white",
						"lg:border-2",
					], // Clases adicionales
				},
				"/buscar": {
					id: "btnBuscar",
					imgSrc: "/img/searchClick.svg",
					backgroundColor: "transparent",
					additionalClasses: [
						"font-bold",
						"text-white",
						"border-b",
						"border-white",
						"lg:border-2",
					],
				},
				"/chat": {
					id: "btnChat",
					imgSrc: "/img/chatClick.svg",
					backgroundColor: "transparent",
					additionalClasses: [
						"font-bold",
						"text-white",
						"border-b",
						"border-white",
						"lg:border-2",
					],
				},
			};

			// Obtener la ruta actual
			const currentPath = window.location.pathname;

			// Verificar si la ruta actual está en la configuración
			if (buttonsConfig[currentPath]) {
				const config = buttonsConfig[currentPath];

				// Seleccionar el botón y la imagen dentro de él
				const buttonElement = document.querySelector(`#${config.id}`);
				const imgElement = buttonElement.querySelector("img");

				// Verificar si el botón y la imagen fueron encontrados
				if (buttonElement && imgElement) {
					// Cambiar el src de la imagen
					imgElement.src = config.imgSrc;

					// Aplicar el fondo al botón
					buttonElement.style.backgroundColor =
						config.backgroundColor;

					// Agregar clases adicionales al botón
					config.additionalClasses.forEach((className) => {
						buttonElement.classList.add(className);
					});
				}
			}
		</script>
	</body>
</html>
